[build-system]
requires = ["pdm-pep517>=1.0.0", "numpy>=1.23.5"]
build-backend = "pdm.pep517.api"

[project]
name = "aics-im2im"
version = "0.0.0"
description = """\
  Collection of representation learning models, techniques, callbacks, utils, \
  used to create latent variable models of cell shape, morphology and \
  intracellular organization.\
  """
readme = "README.md"
authors = [
    { name = "Guilherme Pires", email = "guilherme.pires@alleninstitute.org" },
    { name = "Ritvik Vasan", email = "ritvik.vasan@alleninstitute.org" },
]
dependencies = [
    "rich~=13.3",
    "hydra-core~=1.3",
    "hydra-colorlog~=1.2",
    "hydra-optuna-sweeper~=1.2",
    "torch~=2.0",
    "numpy~=1.23",
    "matplotlib~=3.7",
    "pandas~=1.5",
    "fire~=0.5",
    "joblib~=1.2",
    "mlflow~=2.1",
    "omegaconf~=2.3",
    "pyarrow~=10.0",
    "PyYAML~=6.0",
    "scikit-learn~=1.2",
    "aicsimageio~=4.9",
    "universal-pathlib~=0.0",
    "ome-zarr~=0.6",
    "anndata~=0.8",
    "bfio~=2.3",
    "monai-weekly>=1.2.dev2308",
    "tifffile~=2023.2",
    "tqdm~=4.64",
    "protobuf<=3.20.1",
    "lightning>=2.0.1.post0",
]
requires-python = ">=3.8,<3.11"

[project.optional-dependencies]
equiv = [
    "escnn~=1.0.4",
    "e3nn~=0.5.1"
]
spharm = [
    "vtk~=9.2",
    "aicscytoparam~=0.1",
    "aicsshparam~=0.1"
]
omnipose = [
    "edt>=0.56.4",
    "torchvf @ git+https://github.com/colobas/torchvf.git@682b8b7",
    "cellpose-omni[omni] @ git+https://github.com/kevinjohncutler/cellpose-omni.git@9602b30",
    "omnipose @ git+https://github.com/kevinjohncutler/omnipose.git@ce2e9aa",
]
s3 = [
    "boto3>=1.23.5,<1.24.5",
    "s3fs~=2023.1"
]
all = [
  "aics-im2im[equiv,spharm,omnipose,s3]"
]
test = [
    "pyrootutils~=1.0",
    "pytest~=7.2",
    "sh~=1.14",
    "pytest-cov[toml]~=4.0",
    "aics-im2im[all]"
]
docs = [
    "aics-im2im[all]",
    "furo<=2023.3.23",
    "m2r2<=0.3.3.post2",
    "sphinx<=6.1.3",
]

[project.urls]
Homepage = "https://github.com/AllenCellModeling/aics-im2im"

[tool.pdm.build]
includes = ["aics_im2im", "README.md", "LICENSE", "**/*.yaml" ]
excludes = ["**/*.pyc", "**/__pycache__"]

[tool.flake8]
ignore = [
    "E203",
    "E402",
    "W291",
    "W503",
]
max-line-length = 88

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--durations=0",
    "--strict-markers",
    "--doctest-modules",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
log_cli = "True"
markers = [
    "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]
