_target_: aics_im2im.models.MultiTaskIm2Im

save_images_every_n_epochs: 10
save_dir : ${paths.output_dir}/gan
x_key: dim_caax
patch_shape: [12, 128, 128]

backbone:
  _target_: monai.networks.nets.DynUNet
  spatial_dims: 3
  in_channels: 1
  out_channels: 32
  strides: [1,1,2,1,2]
  kernel_size: [3,3,3,3,3]
  upsample_kernel_size:  [1,2,1,2]
  filters: [ 32, 64, 128, 256, 512]
  dropout: 0.0
  res_block: True

discriminator:
  _target_: aics_im2im.models.components.NLayerDiscriminator
  input_nc: 2
  keys: [bright_caax]
  n_layers: 2

tasks:
  bright_caax:
    head:
      _target_: aics_im2im.models.components.AuxHead
      resolution: lr
      in_channels: 32
      out_channels: 1
      spatial_dims: 3
      dropout: 0.0
      final_act:
        _target_: torch.nn.Tanh

    loss:
      _target_: torch.nn.MSELoss

gan_loss:
  _target_: aics_im2im.utils.gan_loss.GANLoss
  gan_mode: 'vanilla'

optimizer: 
  generator:
    _partial_: True
    _target_: torch.optim.Adam
    lr: 0.0003
    weight_decay: 0.000
  discriminator:
    _partial_: True
    _target_: torch.optim.Adam
    lr: 0.0003
    weight_decay: 0.001
    

lr_scheduler:
  generator:
    _partial_: True
    _target_: torch.optim.lr_scheduler.ExponentialLR
    gamma: 0.97
  discriminator:
    _partial_: True
    _target_: torch.optim.lr_scheduler.ExponentialLR
    gamma: 0.97

postprocessing:
  input:
    dim_caax:
      _target_: aics_im2im.utils.postprocessing.rescale
      _partial_: True
    bright_caax:
      _target_: aics_im2im.utils.postprocessing.rescale
      _partial_: True
  prediction:
    bright_caax:
      _target_: aics_im2im.utils.postprocessing.rescale
      _partial_: True


