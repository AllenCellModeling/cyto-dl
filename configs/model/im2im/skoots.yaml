_target_: aics_im2im.models.im2im.MultiTaskIm2Im

save_images_every_n_epochs: 1
x_key: ${source_col}
save_dir: ${paths.output_dir}

backbone:
  _target_: monai.networks.nets.DynUNet
  spatial_dims: ${spatial_dims}
  in_channels: ${raw_im_channels}
  out_channels: 6
  strides: [1, 2, 2, 2]
  kernel_size: [3, 3, 3, 3]
  upsample_kernel_size: [2, 2, 2]
  dropout: 0.0
  res_block: True

task_heads: ${kv_to_dict:${model._aux._tasks}}

optimizer:
  generator:
    _partial_: True
    _target_: torch.optim.AdamW
    lr: 0.0001
    weight_decay: 0.001

lr_scheduler:
  generator:
    _partial_: True
    _target_: torch.optim.lr_scheduler.ExponentialLR
    gamma: 0.998

inference_args:
  sw_batch_size: 1
  roi_size: ${data._aux.patch_shape}

_aux:
  _tasks:
    - - ${target_col}
      - _target_: aics_im2im.nn.BaseHead
        loss:
          _target_: aics_im2im.models.im2im.utils.SkootsLoss
          dim: ${spatial_dims}
        save_raw: True
