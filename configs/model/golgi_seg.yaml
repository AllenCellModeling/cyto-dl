_target_: aics_im2im.models.MultiTaskIm2Im

save_images_every_n_epochs: 1
x_key: ${source_col}
patch_shape: [32, 512, 512]
save_dir: ${paths.output_dir}

backbone:
  _target_: monai.networks.nets.DynUNet
  spatial_dims: 3
  in_channels: 1
  out_channels: 2
  strides: [[1,1,1],[1,2,2],[1,1,1],[1,2,2]]
  kernel_size: [3,3,3,3]
  upsample_kernel_size:  [[1,2,2],[1,1,1],[1,2,2]]
  filters: [128, 192, 256, 512]
  dropout: 0.0
  res_block: True


tasks:
  seg:
    head:
      _target_: aics_im2im.nn.IdentityAuxHead
    loss:
      _target_: aics_im2im.utils.loss_wrapper.DistanceSegLoss

optimizer: 
  generator:
    _partial_: True
    _target_: torch.optim.AdamW
    lr: 0.001
    weight_decay: 0.001

lr_scheduler:
  generator:
    _partial_: True
    _target_: torch.optim.lr_scheduler.CosineAnnealingLR
    T_max: 1000
    eta_min: 0.000001


postprocessing: 
  input: 
    seg:
      _target_: aics_im2im.utils.postprocessing.detach
      _partial_: True
    raw:
      _target_: aics_im2im.utils.postprocessing.detach
      _partial_: True
  prediction: 
    seg:
      _target_: aics_im2im.utils.postprocessing.detach
      _partial_: True




