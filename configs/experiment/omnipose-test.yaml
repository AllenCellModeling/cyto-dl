# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /data: omnipose-nucseg.yaml
  - override /model: omnipose.yaml
  - override /callbacks: default.yaml
  - override /trainer: gpu.yaml
  - override /logger: mlflow.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["dev"]
seed: 12345



experiment_name: nucseg_omnipose
run_name: lamin-test
source_col: 'source'
target_col: 'target'
persist_cache: False
# mode: predict

# ckpt_path: "//allen/aics/assay-dev/users/Benji/CurrentProjects/im2im_dev/aics-im2im/logs/train/runs/benji_omnipose/test/2023-02-08_14-09-56/checkpoints/epoch_079.ckpt"
trainer:
  max_epochs: 300
  check_val_every_n_epoch: 2
  gpus: [0]
  detect_anomaly : False

model:
  # save_dir: "//allen/aics/assay-dev/users/Benji/CurrentProjects/im2im_dev/aics-im2im/logs/train/runs/benji_omnipose/test/2023-02-08_14-09-56/"
  patch_shape: [32, 256, 256]
  backbone:
    strides: [1, 2, 2, 2, 2]
    kernel_size: [3, 3, 3, 3, 3]
    upsample_kernel_size: [2, 2, 2, 2]

data:
  path: /allen/aics/assay-dev/computational/data/nucleus_tracking/lattice
  cache_dir: ${paths.data_dir}/omnipose/cache
  batch_size: 1
  subsample:
    train: 10
    valid: -1
    test: 0
  num_workers: 8

##### ONLY USE WITH A100s
extras:
  precision:
    _target_: torch.set_float32_matmul_precision
    precision: medium
