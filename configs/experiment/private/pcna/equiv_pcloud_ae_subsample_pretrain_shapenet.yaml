# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /data: private/pcna/nuc_bound/pcna_subsample.yaml
  - override /model: private/pcloud/ae_resize_losses/sinkhorn.yaml
  - override /callbacks: default.yaml
  - override /trainer: default.yaml
  - override /logger: mlflow.yaml
  - override /hydra: private/joblib

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

experiment_name: pcloud
tags: ["equivariance", "pcna-dataset", "point-cloud"]

ckpt_path: /allen/aics/modeling/ritvik/projects/checkpoints/shapenet_cdvector.ckpt

seed: 42

model:
  x_label: pcloud

data:
  batch_size: 32

trainer:
  check_val_every_n_epoch: 1
  min_epochs: 400
  max_epochs: 2000
  accelerator: gpu
  devices: [0]

callbacks:
  early_stopping:
    monitor: val/loss

  model_checkpoint:
    dirpath: ${paths.output_dir}/ckpts
    monitor: val/loss
    save_top_k: 2
    every_n_epochs: 1

logger:
  mlflow:
    experiment_name: pointcloud_nucbound
    # run_name: ${model.reconstruction_loss.pcloud._target_}
    run_name: pretrain_shapenet_${data.transforms[1].sample}/${data.transforms[1].num_cols}/${data.transforms[1].rotate}/${model.reconstruction_loss.pcloud._aux}/${model.encoder.pcloud.mode}

##### ONLY USE WITH A100s
extras:
  precision:
    _target_: torch.set_float32_matmul_precision
    precision: medium

