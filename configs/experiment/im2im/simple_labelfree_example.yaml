# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /data: im2im/patch.yaml
  - override /model: im2im/multitask.yaml
  - override /callbacks: default.yaml
  - override /trainer: gpu.yaml
  - override /logger: mlflow.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["dev"]
seed: 12345

trainer:
  max_epochs: 1000
  check_val_every_n_epoch: 10

callbacks:
  early_stopping:
    monitor: val_loss
  model_checkpoint:
    dirpath: ${paths.output_dir}/ckpts
    monitor: val_loss
    save_top_k: 2
    every_n_epochs: 1
model:
  patch_shape: [32, 128, 128]

source_col: raw
target_col: seg

data:
  # path: //allen/aics/assay-dev/users/Benji/CurrentProjects/20xBF_to_cellseg/CELLMORPH/20xBF_to_100x_laminseg_rnd/50ms_bf_to_200ms_lamin/serotiny_version/simple_lamin
  # cache_dir: //allen/aics/assay-dev/users/Benji/CurrentProjects/20xBF_to_cellseg/CELLMORPH/20xBF_to_100x_laminseg_rnd/50ms_bf_to_200ms_lamin/serotiny_version/simple_lamin/cache
  path: "//allen/aics/assay-dev/users/Benji/CurrentProjects/NPM1_iterative_ml/im2im_interphase"
  cache_dir: //allen/aics/assay-dev/users/Benji/CurrentProjects/NPM1_iterative_ml/im2im_interphase/cache
  subsample:
    train: -1
    test: 1
    valid: -1

logger:
  mlflow:
    experiment_name: benji_NPM1
    run_name: interphase_big_train
