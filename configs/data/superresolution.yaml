_target_: aics_im2im.datamodules.dataframe.DataframeDatamodule

path:
cache_dir:

num_workers: 4
batch_size: 1
pin_memory: True
persistent_workers: True
columns:
  - ${source_col}
  - ${target_col}

transforms:
  train:
    _target_: monai.transforms.Compose
    transforms:
      - _target_: monai.transforms.LoadImaged
        keys: ${datamodule.columns}
        dtype: float16
        reader:
          - _target_: aics_im2im.image.io.MonaiBioReader
            dimension_order_out: "CZYX"
      - _target_: monai.transforms.ToTensord
        keys: ${datamodule.columns}
      - _target_: monai.transforms.NormalizeIntensityd
        keys: ${source_col}
      - _target_: monai.transforms.ScaleIntensityRangePercentilesd
        keys: ${target_col}
        lower: 0.01
        upper: 99.99
        b_min: -1
        b_max: 1
      - _target_: aics_im2im.image.transforms.Resized
        keys:
          - ${source_col}
        scale_factor: [1.3067, 1.25025, 1.25025]

      - _target_: aics_im2im.image.transforms.RandomMultiScaleCropd
        keys: ${datamodule.columns}
        patch_shape: ${model.patch_shape}
        patch_per_image: 1
        scales_dict:
          1:
            - ${target_col}
          2:
            - ${source_col}

      - _target_: monai.transforms.RandHistogramShiftd
        prob: 0.3
        keys: ${source_col}
        num_control_points: [90, 500]

      - _target_: monai.transforms.RandStdShiftIntensityd
        prob: 0.3
        keys: ${source_col}
        factors: 0.1

      - _target_: monai.transforms.RandAdjustContrastd
        prob: 0.3
        keys: ${source_col}
        gamma: [0.9, 1.1]

      - _target_: monai.transforms.RandFlipd
        keys: ${datamodule.columns}
        prob: 0.5
        spatial_axis: [2]
      - _target_: monai.transforms.RandFlipd
        keys: ${datamodule.columns}
        prob: 0.5
        spatial_axis: [1]

      - _target_: monai.transforms.RandRotate90d
        keys: ${datamodule.columns}
        prob: 0.5
        spatial_axes: [1, 2]

  test:
    _target_: monai.transforms.Compose
    transforms:
      - _target_: monai.transforms.LoadImaged
        keys: ${datamodule.columns}
        dtype: float16
        reader:
          - _target_: aics_im2im.image.io.MonaiBioReader
            dimension_order_out: "CZYX"
      - _target_: monai.transforms.ToTensord
        keys: ${datamodule.columns}
      - _target_: monai.transforms.NormalizeIntensityd
        keys: ${source_col}

      - _target_: monai.transforms.ScaleIntensityRangePercentilesd
        keys: ${target_col}
        lower: 0.01
        upper: 99.99
        b_min: -1
        b_max: 1
      - _target_: aics_im2im.image.transforms.Resized
        keys:
          - ${source_col}
        scale_factor: [1.3067, 1.25025, 1.25025]

  predict:
    _target_: monai.transforms.Compose
    transforms:
      - _target_: monai.transforms.LoadImaged
        keys: ${source_col}
        dtype: float16
        reader:
          - _target_: aics_im2im.image.io.MonaiBioReader
            dimension_order_out: "CZYX"
      - _target_: monai.transforms.ToTensord
        keys: ${source_col}
      - _target_: monai.transforms.NormalizeIntensityd
        keys: ${source_col}
      - _target_: aics_im2im.image.transforms.Resized
        keys:
          - ${source_col}
        scale_factor: [1.3067, 1.25025, 1.25025]

  valid:
    _target_: monai.transforms.Compose
    transforms:
      - _target_: monai.transforms.LoadImaged
        keys: ${datamodule.columns}
        dtype: float16
        reader:
          - _target_: aics_im2im.image.io.MonaiBioReader
            dimension_order_out: "CZYX"
      - _target_: monai.transforms.ToTensord
        keys: ${datamodule.columns}
      - _target_: monai.transforms.NormalizeIntensityd
        keys: ${source_col}

      - _target_: monai.transforms.ScaleIntensityRangePercentilesd
        keys: ${target_col}
        lower: 0.01
        upper: 99.99
        b_min: -1
        b_max: 1
      - _target_: aics_im2im.image.transforms.Resized
        keys:
          - ${source_col}
        scale_factor: [1.3067, 1.25025, 1.25025]

      - _target_: aics_im2im.image.transforms.RandomMultiScaleCropd
        keys: ${datamodule.columns}
        patch_shape: ${model.patch_shape}
        patch_per_image: 2
        scales_dict:
          1:
            - ${target_col}
          2:
            - ${source_col}
