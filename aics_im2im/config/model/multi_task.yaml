_target_: aics_im2im.models.MultiTaskIm2Im

x_key: bf
buffer_update_frequency: ${data.buffer_update_frequency}

backbone:
  _target_: monai.networks.nets.DynUNet
  spatial_dims: 3
  in_channels: 1
  out_channels: 256
  strides: [[1, 1, 1], [1, 2, 2], [1, 1, 1], [2, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [2, 2, 2]]
  kernel_size: [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
  upsample_kernel_size:  [[1, 2, 2], [1, 1, 1], [2, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [2, 2, 2]]
  filters: [64, 128, 192, 256, 320, 384, 448, 512]
  dropout: 0.3
  res_block: True


tasks:
  seg:
    head:
      _target_: aics_im2im.networks.AuxHead
      resolution: hr
      in_channels: 256
      out_channels: 4
      final_act:
        _target_: torch.nn.Softmax
        dim: 1

    loss:
      _target_: aics_im2im.utils.LossWrapper
      loss_fn:
        _target_: monai.losses.DiceLoss
        reduction: 'none'
      channel_weight: [1,1.1,1.5,3]
      loss_scale: 1


optimizer: 
  _partial_: True
  _target_: torch.optim.Adam
  lr: 0.0003
  weight_decay: 0.001

lr_scheduler:
  _partial_: True
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.995



