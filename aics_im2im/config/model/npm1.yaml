_target_: aics_im2im.models.MultiTaskIm2Im

save_images_every_n_epochs: 10
x_key: raw
patch_shape: [10,512,512]

size: large
backbone:
  _target_: monai.networks.nets.DynUNet
  spatial_dims: 3
  in_channels: 1
  out_channels: 256
  strides: [[1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 2, 2]]
  kernel_size: [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
  upsample_kernel_size:  [[1, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 2, 2]]
  filters: [64, 128, 192, 256, 320, 384, 448, 512]
  dropout: 0.3
  res_block: True


tasks:
  seg:
    head:
      _target_: aics_im2im.networks.AuxHead
      resolution: lr
      in_channels: 256
      out_channels: 1
      final_act:
        _target_: torch.nn.Sigmoid

    loss:
      _target_: monai.losses.GeneralizedDiceLoss

optimizer: 
  _partial_: True
  _target_: torch.optim.Adam
  lr: 0.00005
  weight_decay: 0.0012

lr_scheduler:
  _partial_: True
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.99


postprocessing:
  input:
    raw:
      _target_: aics_im2im.utils.embedseg_utils.rescale
      _partial_: True
    seg:
      _target_: aics_im2im.utils.embedseg_utils.rescale
      _partial_: True
  prediction:
    seg:
      _target_: aics_im2im.utils.embedseg_utils.rescale
      _partial_: True



